# -*- coding: utf-8 -*-
"""medical_data_visualizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kEGAIgF8tRGgLy0ph2bB6YxzYz-LH-GA
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import pandas_datareader as web
import datetime as dt
import seaborn as sns

data = pd.read_csv('/content/medical_examination.csv')
data.head()

#add BMI column
data['BMI'] = data['weight'] / (data['height'] ** 2)

#add overweight column
data['overweight'] = data['BMI'].apply(lambda x: 1 if x > 25 else 0)

#check for the overweight result
result = data[data['overweight'] == 1]
result

#change data colestrol , gluc to biner numeric
data['cholesterol'] = data['cholesterol'].apply(lambda x: 1 if x >= 1 else 0)
data['gluc'] = data['gluc'].apply(lambda x: 1 if x >= 1 else 0)

#create cat_plot function
def draw_cat_plot():

    data_cat = pd.melt(data, id_vars = 'cardio', var_name = 'variable', value_vars = ['alco', 'active','cholesterol', 'gluc', 'overweight','smoke'])


    data_cat = pd.melt(data, var_name = 'variable', value_vars = ['active','alco','cholesterol', 'gluc','overweight','smoke'], id_vars = 'cardio')


    fig = sns.catplot(data=data_cat, kind="count",  x="variable",hue="value", col="cardio").set_axis_labels("variable", "total")
    fig = fig.fig



    fig.savefig('catplot.png')
    return fig

#check draw_cat_plot() func
fig = draw_cat_plot()

#create draw_heat_map() func
def draw_heat_map():

    data_heat = data[(data['ap_lo']<=data['ap_hi']) &
    (data['height'] >= data['height'].quantile(0.025))&
    (data['height'] <= data['height'].quantile(0.975))&
    (data['weight'] >= data['weight'].quantile(0.025))&
    (data['weight'] <= data['weight'].quantile(0.975))
    ]


    corr = data_heat.corr()




    mask = np.triu(corr)



    fig, ax = plt.subplots(figsize=(7, 5))



    sns.heatmap(corr,mask=mask, fmt='.1f',vmax=.3, linewidths=.5,square=True, cbar_kws = {'shrink':0.5},annot=True, center=0)



    fig.savefig('heatmap.png')
    return fig

#check draw_cat_plot() func
fig = draw_heat_map()

